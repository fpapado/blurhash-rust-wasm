[package]
name = "blurhash-wasm"
version = "0.2.0"
authors = ["fpapado <fgpapado@gmail.com>"]
edition = "2018"

description = "A Rust and WASM implementation of the blurhash algorithm"
repository = "https://github.com/fpapado/blurhash-rust-wasm"
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"
js-sys = "0.3.65"
thiserror = "1.0.50"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
image = "0.24.7"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"
image = "0.24.7"

[profile.release]
# Tell `rustc` to optimize for small code size.
# This did not seem to make a difference in our size tests
# opt-level = 's'
lto = true

# wasm-pack specific options
[package.metadata.wasm-pack.profile.release]
# Array of strings which are explicit arguments to pass to `wasm-opt`. For
# example `['-Os']` would optimize for size while `['-O4']` would execute very
# expensive optimizations passes
# In tests, for this package, -O4 had the smallest code size, though differences
# between all the levels were small (less than 1kB, less than 0.3kB gzipped)
wasm-opt = ['-O4']
